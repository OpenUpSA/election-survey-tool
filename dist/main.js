!function(t){var o={};function i(n){if(o[n])return o[n].exports;var e=o[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=t,i.c=o,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)i.d(t,o,function(n){return e[n]}.bind(null,o));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="",i(i.s="./src/js/main.js")}({"./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no static exports found */function(module,exports){eval("\n/*** Router ***/\nvar Router = Backbone.Router.extend({\n  routes : {\n    \"\" : \"home\",\n    \"stories/:id\" : \"story\",\n    \"add\" : \"add\",\n    \"add/:category\" : \"add\",\n    \"add/:category/:topic\" : \"add\",\n    \"add-custom-template\": \"addCustomTemplate\",\n    \"about\" : \"about\",\n    \"settings\": \"settings\"\n  },\n\n  initialize: function() {\n    this.footer = new FooterView({el: $('#app-footer')});\n  },\n\n  home: function() {\n    this.loadView(new HomeView());\n  },\n\n  addCustomTemplate: function() {\n    this.loadView(new AddCustomTemplate());\n  },\n\n  story: function(id) {\n    var story = PocketReporter.stories.get(id);\n\n    if (story) {\n      this.loadView(new StoryView({model: story}));\n    } else {\n      this.navigate('', {trigger: true});\n    }\n  },\n\n  add: function(category, topic) {\n    this.loadView(new AddStoryView({category: category, topic: topic}));\n  },\n\n  about: function() {\n    this.loadView(new AboutView());\n  },\n\n  settings: function() {\n    this.loadView(new SettingsView());\n  },\n\n  loadView: function(view) {\n    if (this.view) {\n      if (this.view.close) {\n        this.view.close();\n      } else {\n        this.view.remove();\n      }\n    }\n\n    $(\"#viewport\").empty().append(view.el);\n    $('body').scrollTop(0);\n    this.view = view;\n    this.view.trigger('view-inserted');\n    this.footer.viewChanged(view);\n\n    this.track();\n  },\n\n  track: function() {\n    var fragment = Backbone.history.getFragment();\n    if (!/^\\//.test(fragment)) {\n      fragment = '/' + fragment;\n    }\n\n    fragment = '/app' + fragment;\n    PocketReporter.trackView(fragment);\n  }\n});\n\n\n/*** Globals ***/\nvar ElectionSurveyTool = Backbone.Model.extend({\n  initialize: function() {\n    var self = this;\n\n    this.gtagOfflineWrapper = new OfflineEventQue('gtagOffline', gtag);\n    this.categoriesList = new CategoriesList(CATEGORIES);\n    this.topics = new Topics(STORYCHECK_TOPICS);\n\n    // storage version\n    // NB: changing this will clear all stories when a user next loads the app!\n    this.version = 5;\n\n    if ('localStorage' in window) {\n      this.storage = localStorage;\n    } else {\n      this.storage = null;\n    }\n\n    // localisation\n    // fallback english polyglot\n    this.polyglot_en = new Polyglot();\n    this.loadLocale(this.polyglot_en, 'en-za');\n    this.polyglot = new Polyglot();\n    this.polyglot._t = this.polyglot.t;\n    this.polyglot.t = _.bind(this.t, this);\n\n    Handlebars.registerHelper(\"_\", function(text) {\n      return new Handlebars.SafeString(self.polyglot.t(text));\n    });\n\n    Handlebars.registerHelper(\"switch\", function(value, options) {\n      this._switch_value_ = value;\n      var html = options.fn(this);\n      delete this._switch_value_;\n      return html;\n    });\n\n    Handlebars.registerHelper(\"case\", function(value, options) {\n      if (value == this._switch_value_) {\n        return options.fn(this);\n      }\n    });\n\n    this.load();\n\n    var save = _.debounce(_.bind(this.save, this), 300);\n    this.state.on('change', save);\n    this.state.get('stories').on('change add remove', save);\n\n    this.general();\n  },\n\n  // override polyglot.t to track when a key is missing\n  t: function(key) {\n    if (this.polyglot.has(key)) return this.polyglot._t.apply(this.polyglot, arguments);\n\n    // fall back to the english translation, and log a GA event\n    this.trackEvent('l10n-missing', this.polyglot.locale(), key);\n    return this.polyglot_en.t.apply(this.polyglot_en, arguments);\n  },\n\n  load: function() {\n    var val;\n\n    if (this.storage) {\n      val = this.storage.getItem('ElectionSurveyTool');\n\n      if (val) {\n        val = JSON.parse(val);\n        // version check\n        if (val.version != this.version) val = null;\n      }\n    }\n\n    //Pre-load data\n    var json = controller.dataObject('folders');\n    var folders = transformer.xFormFolders(json);\n\n    json = controller.dataObject('contents');\n    var contents = transformer.xFormFolders(json);\n\n    json = controller.dataObject('questions');\n    var questions = transformer.xFormQuestions(json);\n\n    transformer.mapToSurvey(folders,contents,questions);\n\n    if (!val) val = {};\n\n    this.state = new State(val);\n    this.state.set('version', this.version);\n    this.state.set('stories', new Stories(val.stories, {parse: true}));\n    this.state.set('user', new Backbone.Model(val.user, {parse: true}));\n    this.state.set('customTopics', new Topics(val.customTopics, {parse: true}));\n\n    this.stories = this.state.get('stories');\n    this.user = this.state.get('user');\n    this.customTopics = this.state.get('customTopics');\n\n    this.listenTo(this.customTopics, 'add remove', this.customTopicSideEffects);\n    this.customTopicSideEffects();\n\n    // if no locale is set, show a message telling the user that it's new,\n    // then set a default\n    if (!this.state.get('locale')) {\n      //alert('Change your language by tapping the settings icon in the top-right corner.');\n      this.state.set('locale', 'en-za');\n    }\n\n    this.state.on('change:locale', this.localeChanged, this);\n    this.loadLocale();\n  },\n\n  save: function() {\n    if (this.storage) {\n      this.storage.setItem('PocketReporter', JSON.stringify(this.state.toJSON()));\n    }\n  },\n\n  customTopicSideEffects: function() {\n    this.categoriesList.get('custom').set('topics', this.customTopics.pluck('id'));\n    this.topics.add(this.customTopics.models);\n  },\n\n  addCustomTemplateFromApi: function(idArray, callback) {\n    var remaingRequest = idArray.length;\n\n    idArray.forEach(function(id) {\n      jQuery.ajax(\n        'https://custom.pocketreporter.co.za/wp-json/wp/v2/questions?slug=' + encodeURI(id),\n        {\n          error: function() {\n            remaingRequest -= 1;\n\n            if (callback) {\n              return callback('error');\n            }\n          },\n\n          success: function(response) {\n            remaingRequest -= 1;\n\n            if (response.length < 1 ) {\n              return callback && callback('notExist');\n            }\n\n            var newTopic = ElectionSurveyTool.normaliseWordpressSchema(response[0]);\n            ElectionSurveyTool.customTopics.add(newTopic);\n\n            if (remaingRequest < 1 && callback) {\n              return callback('success');\n            }\n          }\n        }\n      )\n    });\n  },\n\n  normaliseWordpressSchema: function(result) {\n    return {\n      custom: true,\n      icon: 'fa-bookmark',\n      id: result.slug,\n      name: result.title.rendered,\n      questions: result.acf.questions_list.map(function(item, index) {\n        return {\n          key: index,\n          num: index,\n          question: item.question.replace(/<[\\/]?p>/ig, ''),\n          custom: true,\n        }\n      }),\n      length: result.acf.questions_list.length,\n    }\n  },\n\n  // unique story id for this user\n  newStoryId: function() {\n    var id = this.state.get('nextId');\n    this.state.set('nextId', id + 1);\n    return id;\n  },\n\n  localeChanged: function() {\n    this.loadLocale();\n    this.trackEvent('locale', 'changed', this.state.get('locale'));\n  },\n\n  loadLocale: function(polyglot, locale) {\n    // load new localised phrases\n    polyglot = polyglot || this.polyglot;\n    locale = locale || this.state.get('locale');\n    polyglot.locale(locale);\n    polyglot.replace(L10N[locale]);\n  },\n\n  general: function() {\n    // collapsibles\n    $('body').on('show.bs.collapse', '.collapsible-sections .collapse', function() {\n      $(this).prev().removeClass('collapsed');\n    });\n    $('body').on('hide.bs.collapse', '.collapsible-sections .collapse', function() {\n      $(this).prev().addClass('collapsed');\n    });\n\n    var originalHeight = document.documentElement.clientHeight;\n    var originalWidth = document.documentElement.clientWidth;\n    $(window).resize(function() {\n      // Control landscape/portrait mode switch\n      if (document.documentElement.clientHeight == originalWidth &&\n        document.documentElement.clientWidth == originalHeight) {\n        originalHeight = document.documentElement.clientHeight;\n        originalWidth = document.documentElement.clientWidth;\n      }\n      // Check if the available height is smaller (keyboard is shown) so we hide the footer.\n     if (document.documentElement.clientHeight < originalHeight) {\n       $('#footer-wrapper').hide();\n     } else {\n       $('#footer-wrapper').show();\n     }\n    });\n\n    // cycle any language chooser elements\n    setTimeout(_.bind(this.cycleLanguageChooser, this), 3000);\n  },\n\n  cycleLanguageChooser: function() {\n    $('.change-language-cycler').each(function() {\n      var $elem = $(this),\n          lang = $elem.data('lang'),\n          codes = _.keys(L10N);\n\n      var ix = codes.indexOf(lang);\n      ix++;\n      if (ix >= codes.length) ix = 0;\n      lang = codes[ix];\n\n      $elem\n        .text(L10N[lang].splash.language_sel)\n        .data('lang', lang);\n    });\n\n    setTimeout(_.bind(this.cycleLanguageChooser, this), 3000);\n  },\n\n  trackEvent: function(action, category, label, value) {\n    if ('gtag' in window) {\n      this.gtagOfflineWrapper.event(\n        'event',\n        action,\n        {\n          'event_category': category,\n          'event_label': label,\n          'value': value,\n        }\n      );\n    }\n  },\n\n\n  trackView: function(view) {\n    if ('gtag' in window) {\n      this.gtagOfflineWrapper.event(\n        'config',\n        'UA-48399585-51',\n        {\n          'page_title' : view,\n          'page_path': Backbone.history.getFragment(),\n        }\n      );\n    }\n  }\n});\n\nvar router = null;\n\nvar app = {\n  initialize: function() {\n    this.bindEvents();\n    // XXX HACK HACK HACK/\n    // this means we can run the app using a local webserver\n    // and this must be removed when compiling using phonegap\n    this.onDeviceReady();\n  },\n  bindEvents: function() {\n    document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);\n  },\n  onDeviceReady: function() {\n    app.eventReceived('deviceready');\n  },\n  eventReceived: function(id) {\n    PocketReporter = new ElectionSurveyTool();\n    router = new Router();\n    Backbone.history.start();\n  }\n};\n\napp.initialize();\n\n\n//# sourceURL=webpack:///./src/js/main.js?")}});